{"version":3,"sources":["components/Carousel.tsx","App.tsx","index.tsx"],"names":["Carousel","images","step","frameSize","itemWidth","animationDuration","infinite","useState","startIndex","setStartIndex","useEffect","maxStartIndex","length","Math","min","carouselContainerStyles","width","transitionDuration","carouselListStyles","height","transform","className","style","map","image","index","src","alt","type","onClick","newStartIndex","max","disabled","App","state","handleInputChange","event","target","id","setState","value","prevState","this","action","htmlFor","name","onChange","defaultChecked","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1cb7af36.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport './Carousel.scss';\n\ntype Props = {\n  images: string[],\n  step: number,\n  frameSize: number,\n  itemWidth: number,\n  animationDuration: number,\n  infinite: boolean,\n};\n\nconst Carousel: React.FC<Props> = ({\n  images,\n  step,\n  frameSize,\n  itemWidth,\n  animationDuration,\n  infinite,\n}) => {\n  const [startIndex, setStartIndex] = useState(0);\n\n  useEffect(() => {\n    if (!infinite) {\n      const maxStartIndex = images.length - frameSize;\n\n      setStartIndex(Math.min(startIndex, maxStartIndex));\n    }\n  }, [frameSize, images, infinite, startIndex]);\n\n  const handlePrevClick = () => {\n    const newStartIndex = startIndex - step;\n\n    if (infinite) {\n      setStartIndex(\n        newStartIndex < 0\n          ? images.length - frameSize\n          : newStartIndex,\n      );\n    } else {\n      setStartIndex(Math.max(newStartIndex, 0));\n    }\n  };\n\n  const handleNextClick = () => {\n    let newStartIndex;\n\n    if (infinite) {\n      newStartIndex = (startIndex + step) % images.length;\n    } else {\n      const maxStartIndex = images.length - frameSize;\n\n      newStartIndex = Math.min(startIndex + step, maxStartIndex);\n    }\n\n    setStartIndex(newStartIndex);\n  };\n\n  const carouselContainerStyles = {\n    width: `${itemWidth * frameSize}px`,\n    transitionDuration: `${animationDuration}ms`,\n  };\n\n  const carouselListStyles = {\n    width: `${itemWidth * images.length}px`,\n    height: `${itemWidth}px`,\n    transitionDuration: `${animationDuration}ms`,\n    transform: `translateX(-${startIndex * itemWidth}px)`,\n  };\n\n  return (\n    <div className=\"Carousel\" style={carouselContainerStyles}>\n      <ul className=\"Carousel__list\" style={carouselListStyles}>\n        {images.map((image: string, index: number) => (\n          <li key={image} className=\"Carousel__item\">\n            <img\n              src={image}\n              alt={`${index}`}\n              width={itemWidth}\n              className=\"Carousel__image\"\n            />\n          </li>\n        ))}\n      </ul>\n\n      <div className=\"Carousel__btns\">\n        <button\n          className=\"Carousel__btn\"\n          type=\"button\"\n          onClick={handlePrevClick}\n          disabled={!infinite && startIndex === 0}\n        >\n          &lt;\n        </button>\n        <button\n          className=\"Carousel__btn\"\n          type=\"button\"\n          onClick={handleNextClick}\n          data-cy=\"next\"\n          disabled={\n            !infinite\n              && startIndex >= (itemWidth * (images.length - frameSize))\n          }\n        >\n          &gt;\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default Carousel;\n","import React from 'react';\nimport './App.scss';\nimport Carousel from './components/Carousel';\n\ninterface State {\n  images: string[];\n  step: number;\n  frameSize: number;\n  itemWidth: number;\n  animationDuration: number;\n  infinite: boolean;\n}\n\nclass App extends React.Component<{}, State> {\n  state = {\n    images: [\n      './img/1.png',\n      './img/2.png',\n      './img/3.png',\n      './img/4.png',\n      './img/5.png',\n      './img/6.png',\n      './img/7.png',\n      './img/8.png',\n      './img/9.png',\n      './img/10.png',\n    ],\n    itemWidth: 130,\n    frameSize: 3,\n    step: 3,\n    animationDuration: 1000,\n    infinite: false,\n  };\n\n  handleInputChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    switch (event.target.id) {\n      case 'stepId':\n        this.setState({ step: +event.target.value });\n        break;\n      case 'frameId':\n        this.setState({ frameSize: +event.target.value });\n        break;\n      case 'itemId':\n        this.setState({ itemWidth: +event.target.value });\n        break;\n      case 'animationDuration':\n        this.setState({ animationDuration: +event.target.value });\n        break;\n      case 'infinite':\n        this.setState((prevState) => ({\n          infinite: !prevState.infinite,\n        }));\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  render() {\n    const {\n      images,\n      step,\n      frameSize,\n      itemWidth,\n      animationDuration,\n      infinite,\n    } = this.state;\n\n    const { handleInputChange } = this;\n\n    return (\n      <div className=\"App\">\n        {/* eslint-disable-next-line */}\n        <h1 data-cy=\"title\">Carousel with {images.length} images</h1>\n\n        <form action=\"#\" className=\"App__form\">\n          <label className=\"App__label\" htmlFor=\"itemId\">\n            Item Width\n            <input\n              type=\"number\"\n              id=\"itemId\"\n              name=\"itemId\"\n              min=\"50\"\n              max=\"200\"\n              className=\"App__input\"\n              step=\"5\"\n              value={itemWidth}\n              onChange={handleInputChange}\n            />\n          </label>\n          <label className=\"App__label\" htmlFor=\"frameId\">\n            Frame size\n            <input\n              type=\"number\"\n              id=\"frameId\"\n              name=\"frameId\"\n              min=\"1\"\n              max=\"10\"\n              className=\"App__input\"\n              value={frameSize}\n              onChange={handleInputChange}\n            />\n          </label>\n          <label className=\"App__label\" htmlFor=\"stepId\">\n            Step\n            <input\n              type=\"number\"\n              id=\"stepId\"\n              name=\"stepId\"\n              min=\"1\"\n              max=\"9\"\n              className=\"App__input\"\n              value={step}\n              onChange={handleInputChange}\n            />\n          </label>\n          <label className=\"App__label\" htmlFor=\"animationDuration\">\n            Animation duration\n            <input\n              type=\"number\"\n              id=\"animationDuration\"\n              name=\"animationDuration\"\n              className=\"App__input\"\n              value={animationDuration}\n              onChange={handleInputChange}\n            />\n          </label>\n          <label className=\"App__label App__label--infinite\" htmlFor=\"infinite\">\n            Infinite\n            <input\n              type=\"checkbox\"\n              id=\"infinite\"\n              name=\"infinite\"\n              className=\"App__input\"\n              defaultChecked={infinite}\n              onChange={handleInputChange}\n            />\n          </label>\n        </form>\n\n        <Carousel\n          images={images}\n          step={step}\n          itemWidth={itemWidth}\n          frameSize={frameSize}\n          animationDuration={animationDuration}\n          infinite={infinite}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}